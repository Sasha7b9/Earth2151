//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.560.0 using the following command:
// xscgen -o Collada141 --nc=true --sf .\collada_schema_1_4_1_ms.xsd
namespace Collada141
{
    
    
    /// <summary>
    /// <para>Opens a block of GLSL platform-specific data types and technique declarations.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Opens a block of GLSL platform-specific data types and technique declarations.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.560.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("profile_GLSL", Namespace="http://www.collada.org/2005/11/COLLADASchema", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("profile_GLSL", Namespace="http://www.collada.org/2005/11/COLLADASchema")]
    public partial class Profile_GLSL
    {
        
        [System.Xml.Serialization.XmlElementAttribute("asset")]
        public Asset Asset { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Fx_Code_Profile> _code;
        
        [System.Xml.Serialization.XmlElementAttribute("code")]
        public System.Collections.ObjectModel.Collection<Fx_Code_Profile> Code
        {
            get
            {
                return this._code;
            }
            private set
            {
                this._code = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Code collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeSpecified
        {
            get
            {
                return (this.Code.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Profile_GLSL" /> class.</para>
        /// </summary>
        public Profile_GLSL()
        {
            this._code = new System.Collections.ObjectModel.Collection<Fx_Code_Profile>();
            this._include = new System.Collections.ObjectModel.Collection<Fx_Include_Common>();
            this._image = new System.Collections.ObjectModel.Collection<Image>();
            this._newparam = new System.Collections.ObjectModel.Collection<Glsl_Newparam>();
            this._technique = new System.Collections.ObjectModel.Collection<Profile_GLSLTechnique>();
            this._extra = new System.Collections.ObjectModel.Collection<Extra>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Fx_Include_Common> _include;
        
        [System.Xml.Serialization.XmlElementAttribute("include")]
        public System.Collections.ObjectModel.Collection<Fx_Include_Common> Include
        {
            get
            {
                return this._include;
            }
            private set
            {
                this._include = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Include collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncludeSpecified
        {
            get
            {
                return (this.Include.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Image> _image;
        
        [System.Xml.Serialization.XmlElementAttribute("image")]
        public System.Collections.ObjectModel.Collection<Image> Image
        {
            get
            {
                return this._image;
            }
            private set
            {
                this._image = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Image collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageSpecified
        {
            get
            {
                return (this.Image.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Glsl_Newparam> _newparam;
        
        [System.Xml.Serialization.XmlElementAttribute("newparam")]
        public System.Collections.ObjectModel.Collection<Glsl_Newparam> Newparam
        {
            get
            {
                return this._newparam;
            }
            private set
            {
                this._newparam = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Newparam collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewparamSpecified
        {
            get
            {
                return (this.Newparam.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Profile_GLSLTechnique> _technique;
        
        /// <summary>
        /// <para>Holds a description of the textures, samplers, shaders, parameters, and passes necessary for rendering this effect using one method.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Holds a description of the textures, samplers, shaders, parameters, and passes ne" +
            "cessary for rendering this effect using one method.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("technique")]
        public System.Collections.ObjectModel.Collection<Profile_GLSLTechnique> Technique
        {
            get
            {
                return this._technique;
            }
            private set
            {
                this._technique = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Extra> _extra;
        
        [System.Xml.Serialization.XmlElementAttribute("extra")]
        public System.Collections.ObjectModel.Collection<Extra> Extra
        {
            get
            {
                return this._extra;
            }
            private set
            {
                this._extra = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Extra collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtraSpecified
        {
            get
            {
                return (this.Extra.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>The id attribute is a text string containing the unique identifier of this element. 
        ///					This value must be unique within the instance document. Optional attribute.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The id attribute is a text string containing the unique identifier of this elemen" +
            "t. This value must be unique within the instance document. Optional attribute.")]
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
    }
}

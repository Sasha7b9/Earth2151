//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.560.0 using the following command:
// xscgen -o Collada141 --nc=true --sf .\collada_schema_1_4_1_ms.xsd
namespace Collada141
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.560.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Rigid_ConstraintTechnique_Common", Namespace="http://www.collada.org/2005/11/COLLADASchema", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Rigid_ConstraintTechnique_Common
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private Rigid_ConstraintTechnique_CommonEnabled _enabled = new Collada141.Rigid_ConstraintTechnique_CommonEnabled { Value = true };
        
        /// <summary>
        /// <para>If false, the constraint doesn’t exert any force or influence on the rigid bodies.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("If false, the constraint doesn’t exert any force or influence on the rigid bodies" +
            ".")]
        [System.Xml.Serialization.XmlElementAttribute("enabled")]
        public Rigid_ConstraintTechnique_CommonEnabled Enabled
        {
            get
            {
                return this._enabled;
            }
            set
            {
                this._enabled = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private Rigid_ConstraintTechnique_CommonInterpenetrate _interpenetrate = new Collada141.Rigid_ConstraintTechnique_CommonInterpenetrate { Value = false };
        
        /// <summary>
        /// <para>Indicates whether the attached rigid bodies may inter-penetrate.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indicates whether the attached rigid bodies may inter-penetrate.")]
        [System.Xml.Serialization.XmlElementAttribute("interpenetrate")]
        public Rigid_ConstraintTechnique_CommonInterpenetrate Interpenetrate
        {
            get
            {
                return this._interpenetrate;
            }
            set
            {
                this._interpenetrate = value;
            }
        }
        
        /// <summary>
        /// <para>The limits element provides a flexible way to specify the constraint limits (degrees of freedom 
        ///									and ranges).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("The limits element provides a flexible way to specify the constraint limits (degr" +
            "ees of freedom and ranges).")]
        [System.Xml.Serialization.XmlElementAttribute("limits")]
        public Rigid_ConstraintTechnique_CommonLimits Limits { get; set; }
        
        /// <summary>
        /// <para>Spring, based on distance (“LINEAR”) or angle (“ANGULAR”).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Spring, based on distance (“LINEAR”) or angle (“ANGULAR”).")]
        [System.Xml.Serialization.XmlElementAttribute("spring")]
        public Rigid_ConstraintTechnique_CommonSpring Spring { get; set; }
    }
}
